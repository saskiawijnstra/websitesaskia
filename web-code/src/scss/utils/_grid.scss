// -----------------------------
// Grid Setup
// -----------------------------

@use "../_functions.scss";
@use "sass:math";

$grid-columns: 12;
$gutter: 44.5px;
$container-padding: 105px;

$container-max-width: 1470px;

.grid-container {
  display: grid;
  padding: 0;
  margin: 0;
  width: 100%;
  grid-template-columns: repeat($grid-columns, 1fr);
  grid-auto-flow: row;
  column-gap: $gutter;
  padding-left: $container-padding;
  padding-right: $container-padding;
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  box-sizing: border-box;
}

// Grid Utility Mixins
@mixin col-span($n) {
  grid-column: span #{$n};
}

@mixin col-start($n) {
  grid-column-start: #{$n};
}

// Anzahl der Spalten im Grid
$grid-columns: 12;

// Mixin: col-span
@mixin col-span($n) {
  grid-column: span #{$n};
}

// Mixin: col-start
@mixin col-start($n) {
  grid-column-start: #{$n};
}

// Klassen f√ºr einfache Spans und Starts
@for $i from 1 through $grid-columns {
  .col-span-#{$i} {
    @include col-span($i);
  }

  .col-start-#{$i} {
    @include col-start($i);
  }
}

// combi classes for column start and end (offset)
@for $span from 1 through $grid-columns {
  @for $start from 1 through ($grid-columns - $span + 1) {
    .col-span-#{$span}-start-#{$start} {
      grid-column: #{$start} / span #{$span};
    }
  }
}

@media (max-width: 1200px) {
  .grid-container {
    column-gap: math.div($gutter, 1.5);
    padding-left: math.div($container-padding, 1.5);
    padding-right: math.div($container-padding, 1.5);
  }
}

@media (max-width: 600px) {
  .grid-container {
    column-gap: 10px;
    padding-left: 24px;
    padding-right: 24px;
  }
}
